# vim: set ft=yaml ts=2 expandtab:
#
# Copyright (c) Markus Falb <markus.falb@mafalb.at>
# GNU General Public License v3.0+
# see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt
---

name: ANSIBLECOLLECTION

on:  # yamllint disable-line rule:truthy

  # make it reusable
  workflow_call:
    inputs:
      ref:
        type: string
        default: ${{ github.sha }}

jobs:

  prepare:
    runs-on: ubuntu-22.04
    outputs:
      repo: ${{ steps.mangle.outputs.repo }}
      ref: ${{ steps.mangle.outputs.ref }}

    steps:

      - name: Set repo and ref if running on mafalb/workflows
        id: mangle
        run: |
          default_branch=$(GH_TOKEN=${{ github.token }} gh api repos/${{ github.repository }} --jq '.default_branch')
          echo $default_branch

          if test "${{ github.repository }}" = "mafalb/workflows"; then
              # CI run on mafalb/workflows
              # mangle repo and ref
              repo="mafalb/ansible-test-collections"
              if  "${{ github.ref_name }}" = "main"; then
                  ref="main"  # we know that main is the master branch of mafalb/ansible-test-collections
              else
                  ref="dev"
              fi
          else
              # normal CI run on another repository
              # pass through
              repo="${{ github.repository }}"
              ref="${{ inputs.ref }}"
          fi
          echo "repo=$repo" >> $GITHUB_OUTPUT
          echo "ref=$ref" >> $GITHUB_OUTPUT

  ansible-test:
    runs-on: ubuntu-22.04
    needs: prepare
    environment: ${{ needs.prepare.outputs.env_name }}
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
      CI_REPO: ${{ needs.prepare.outputs.repo }}
      CI_REF: ${{ needs.prepare.outputs.ref }}

    strategy:
      fail-fast: false

      matrix:

        include:

          - ansible_version: '2.14'
            python_version: '3.9'

          - ansible_version: '2.14'
            python_version: '3.10'

          - ansible_version: '2.14'
            python_version: '3.11'

          - ansible_version: '2.15'
            python_version: '3.9'

          - ansible_version: '2.15'
            python_version: '3.10'

          - ansible_version: '2.15'
            python_version: '3.11'

          - ansible_version: '2.16'
            python_version: '3.10'

          - ansible_version: '2.16'
            python_version: '3.11'

          - ansible_version: '2.16'
            python_version: '3.12'

    steps:

      - name: Assertions
        run: |
          test -n "$CI_REPO"
          test -n "$CI_REF"

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      # Download the needed collections
      # We use ansible-galaxy, not actions/checkout
      #
      - name: checkout ansible-collection
        working-directory: ${{ github.workspace }}
        run: |

          # install the collection we want to test
          ansible-galaxy collection install git+"${{ github.server_url }}"/"$CI_REPO".git,"$CI_REF" -p collections

          # note that namespace and collection_name are not necessarily the same
          # as github.repository_owner and similar variables.
          # the naming of the repository and collection_name can be disconnected
          #
          # we determine namespace and collection_name
          # this works because we know that we installed just one collection
          #
          namespace=$(basename $(ls -d collections/ansible_collections/*/))
          collection_name=$(basename $(ls -d collections/ansible_collections/*/*/))

          echo collection $namespace/$collection_name
          tree collections

          # save the directory of our collection for future use
          echo working-directory=collections/ansible_collections/$namespace/$collection_name >>"$GITHUB_ENV"
          echo "collection_name=$collection_name" >>$GITHUB_OUTPUT
          echo "namespace=$namespace" >>$GITHUB_OUTPUT

      - name: Checkout mafalb.ansible
        working-directory: ${{ github.workspace }}
        run: ansible-galaxy collection install git+${{ github.server_url }}/mafalb/ansible-collection-ansible.git -p collections

      - name: Install ansible
        working-directory: collections/ansible_collections/mafalb/ansible
        run: |
          ansible-playbook -D playbooks/install-ansible.yml \
            -e '{"virtualenv_packages":["_ansible==${{ matrix.ansible_version }}",
                                        "ansible-lint${{ matrix.ansible_lint_specifier }}",
                                        "_ansible_test", "flake8", "antsibull-docs", "rstcheck-core"]}'\
            -e virtualenv_python=python${{ matrix.python_version }} -t all,debug
        env:
          ANSIBLE_COLLECTIONS_PATH: ../../..

      - name: check ansible version
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible --version
          ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

      - name: check python version
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible --version | grep "^\s*python.* ${{ matrix.python_version }}"

      - name: docs
        if: matrix.ansible_version != '2.12'
        working-directory: ${{ env.working-directory }}
        env:
          ANSIBLE_COLLECTIONS_PATH: ../../..:/tmp/collections
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible-galaxy collection install community.general -p /tmp/collections
          mkdir -p tests/output/doc
          antsibull-docs sphinx-init --use-current \
            --copyright "Markus Falb (c) <markus.falb@mafalb.at> GPL-3.0-or-later" \
            --dest-dir tests/output/doc ${{ env.namespace }}/${{ env.collection_name }}
          echo VIRTUAL_ENV $VIRTUAL_ENV
          #antsibull-docs lint-collection-docs --plugin-docs --no-skip-rstcheck .
          echo gugu
          cd tests/output/doc
          pip install -r requirements.txt -c "$VIRTUAL_ENV"/constraints.txt
          ./build.sh

...
