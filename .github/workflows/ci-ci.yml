# vim: set ft=yaml ts=2 expandtab:
#
# Copyright (c) Markus Falb <markus.falb@mafalb.at>
# GNU General Public License v3.0+
# see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt
---

name: Ci
on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      targeted_branch:
        type: string

jobs:

  lint:
    uses: ./.github/workflows/reusable-yamllint.yml

  selectbranch:
    uses: ./.github/workflows/reusable-selectbranch.yml
    with:
      targeted_branch: ${{ inputs.targeted_branch }}
    needs: lint

  ansiblecollection_info:
    runs-on: ubuntu-22.04
    needs: selectbranch
    steps:
      - name: Checkout workflows
        uses: actions/checkout@v4
      - name: Get Info about mafalb.ansible
        uses: ./.github/actions/ansiblecollectioninfo
        with:
          targeted_branch: ${{ needs.selectbranch.outputs.ref }}
      - name: Assertions
        run: |
          test "$collection_name" = "ansible"
          test "$namespace" = "mafalb"

  createansiblecollection:
    runs-on: ubuntu-22.04
    needs: selectbranch

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: mafalb/skeletons
          path: skeletons
          ref: ${{ needs.selectbranch.outputs.ref }}

      - name: Create directory for collections
        run: mkdir ansible_collections

      - name: Collection | create a new collection with our skeleton
        working-directory: ansible_collections
        run: |
          ansible-galaxy collection init --collection-skeleton ../skeletons/ansible-collection-skeleton local.ci
          ansible-galaxy collection install -r local/ci/requirements.yml

      - name: Collectionrole | create a new role
        working-directory: ansible_collections
        run: |
          ansible-galaxy role init --role-skeleton ../skeletons/ansible-collection-role-skeleton role1 --init-path local/ci/roles
          cat - >local/ci/playbooks/ci.yml << EOF
          ---
          - name: A ci playbook
            hosts: localhost
            roles:
              - role: local.ci.role1
          EOF

      - name: Collection | Build the collection
        run: ansible-galaxy collection build ansible_collections/local/ci

      - name: Collection | Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ansible-collections-${{ needs.selectbranch.outputs.ref }}
          path: local-ci-0.1.0.tar.gz
          if-no-files-found: error
          overwrite: true

  ansiblecollection:
    needs:
      - selectbranch
      - createansiblecollection
    uses: ./.github/workflows/reusable-ansiblecollection.yml
    with:
      filename: local-ci-0.1.0.tar.gz
      ref: ${{ needs.selectbranch.outputs.ref }}

  molecule:
    needs:
      - selectbranch
      - createansiblecollection
    uses: ./.github/workflows/reusable-molecule.yml
    with:
      ref: ${{ needs.selectbranch.outputs.ref }}

  allsuccess:
    if: success() || failure()
    uses: ./.github/workflows/reusable-allsuccess.yml
    with:
      joblist: ${{ toJSON(needs) }}
    needs:
      - lint
      - selectbranch
      - createansiblecollection
      - ansiblecollection
...
