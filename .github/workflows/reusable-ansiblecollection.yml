# vim: set ft=yaml ts=2 expandtab:
#
# Copyright (c) Markus Falb <markus.falb@mafalb.at>
# GNU General Public License v3.0+
# see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt
---

name: ANSIBLECOLLECTION

on: # yamllint disable-line rule:truthy

  # make it reusable
  workflow_call:
    inputs:
      repo:
        required: true
        type: string
        default: ${{ github.repository }}
      ref:
        type: string
        default: ${{ github.ref }}

jobs:

  ansible-test:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false

      matrix:

        include:

          - ansible_version: '2.12'
            python_version: '3.9'
            # antsibull needs at least ansible 2.13
            nodoc: true

          - ansible_version: '2.12'
            python_version: '3.10'
            # antsibull needs at least ansible 2.13
            nodoc: true

          - ansible_version: '2.14'
            python_version: '3.9'

          - ansible_version: '2.14'
            python_version: '3.10'

          - ansible_version: '2.14'
            python_version: '3.11'

          - ansible_version: '2.15'
            python_version: '3.9'

          - ansible_version: '2.15'
            python_version: '3.10'

          - ansible_version: '2.15'
            python_version: '3.11'

          - ansible_version: '2.16'
            python_version: '3.10'

          - ansible_version: '2.16'
            python_version: '3.11'

          - ansible_version: '2.16'
            python_version: '3.12'

    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    steps:

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      # Download the needed collections
      # We use ansible-galaxy, not actions/checkout
      #
      - name: checkout ansible-collections
        run: |
         
          # install collection
          ansible-galaxy collection install git+${{ github.server_url }}/${{ inputs.repo }}.git,${{ inputs.ref }} -p collections

          # note that namespace and collection_name are not necessarily the same
          # as github.repository_owner and similar variables.
          # the naming of the repository and collection_name can be disconnected
          #
          # we determine namespace and collection_name
          # this works because we know that we installed just one collection
          #
          namespace=$(ls collections/ansible_collections/*/)
          collection_name=$(ls collections/ansible_collections/*/*/)

          echo collection $namespace/$collection_name

          # set working directory for following steps
          echo working-directory=collections/ansible_collections/$namespace/$collection_name" >>"$GITHUB_ENV"

          # after that install mafalb.ansible
          ansible-galaxy collection install git+${{ github.server_url }}/mafalb/ansible-collection-ansible.git -p collections

      - name: install ansible
        run: |
          cd ../..
          ansible-playbook -D mafalb/ansible/playbooks/install-ansible.yml -e '{"virtualenv_packages":["_ansible==${{ matrix.ansible_version }}", "ansible-lint${{ matrix.ansible_lint_specifier }}", "_ansible_test", "flake8", "antsibull-docs", "rstcheck-core"]}' -e virtualenv_python=python${{ matrix.python_version }} -t all,debug
        env:
          ANSIBLE_COLLECTIONS_PATHS: ../../..

      - name: check ansible version
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible --version
          ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

      - name: check python version
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible --version | grep "^\s*python.* ${{ matrix.python_version }}"

      - name: yamllint
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          yamllint -s .

      - name: lint
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ANSIBLE_LINT_VERSION=$(NO_COLOR=1 ansible-lint --version | awk '/^ansible-lint / {print $2}')
          if [[ "$ANSIBLE_LINT_VERSION" =~ ^4 ]]; then
              if test -f .ansible-lint-4; then
                  echo "ansible-lint -c .ansible-lint-4 $ANSIBLE_LINT_VERSION..."
                  ansible-lint -v -c .ansible-lint-4
              fi
          elif test "${ANSIBLE_LINT_VERSION}" == "6.8.6" -a -f .ansible-lint-6.8.6; then
              echo "ansible-lint $ANSIBLE_LINT_VERSION..."
              ansible-lint -v --offline -c .ansible-lint-6.8.6
          elif test -f .ansible-lint-"$ANSIBLE_LINT_VERSION"; then
              echo "ansible-lint -c .ansible-lint-$ANSIBLE_LINT_VERSION..."
              ansible-lint -v -c .ansible-lint-"$ANSIBLE_LINT_VERSION"
          else
              echo "ansible-lint $ANSIBLE_LINT_VERSION..."
              ansible-lint -v
          fi

      - name: install shellcheck
        run: sudo apt-get install shellcheck

      - name: sanity
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          if test "${{ matrix.ansible_version }}" = "2.12"
          then
            # I dont know how to set collections path for ansible-doc
            # so i skip ansible-doc test
            #
            ansible-test sanity --skip-test ansible-doc --requirements --python ${{ matrix.python_version }}
          else
            ansible-test sanity --requirements --python ${{ matrix.python_version }}
          fi

      - name: unit tests
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible-test units --coverage --requirements --python ${{ matrix.python_version }}

      - name: integration tests
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible-test integration --requirements --python ${{ matrix.python_version }}

      - name: docs
        if: matrix.ansible_version != '2.12'
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          mkdir /tmp/collections
          ansible-galaxy -vvvv collection list -p /tmp/collections
          ansible-galaxy -vvvv collection install community.general -p /tmp/collections
          bash tests/docs.sh requirements

...
